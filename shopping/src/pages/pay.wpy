<style lang="less">
page {
  padding-bottom: 90rpx;
}
.receive_address_row .user_info_row {
  padding: 20rpx;
  display: flex;
}
.receive_address_row .user_info_row .useriofo {
  flex: 5;
}
.receive_address_row .user_info_row .userphone {
  flex: 2;
}
.cart_content .cart_title {
  padding: 20rpx;
  font-size: 36rpx;
  color: var(--themeColor);
  border-bottom: 1px solid currentColor;
  border-top: 1px solid currentColor;
}
.cart_content .cart_main .cart_item {
  display: flex;
  padding: 10rpx;
  border-bottom: 1px solid #ccc;
}
.cart_content .cart_main .cart_item navigator.cart_img_wrap {
  flex: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}
.cart_content .cart_main .cart_item navigator.cart_img_wrap image {
  width: 80%;
}
.cart_content .cart_main .cart_item .cart_info_wrap {
  display: flex;
  justify-content: space-around;
  flex-direction: column;
  flex: 4;
}
.cart_content .cart_main .cart_item .cart_info_wrap .goods_name {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  color: #666;
}
.cart_content .cart_main .cart_item .cart_info_wrap .goods_price_wrap {
  display: flex;
  justify-content: space-between;
}
.cart_content
  .cart_main
  .cart_item
  .cart_info_wrap
  .goods_price_wrap
  .goods_price {
  color: var(--themeColor);
  font-size: 34rpx;
}
.cart_content
  .cart_main
  .cart_item
  .cart_info_wrap
  .goods_price_wrap
  .cart_num_tool {
  display: flex;
}
.cart_content
  .cart_main
  .cart_item
  .cart_info_wrap
  .goods_price_wrap
  .cart_num_tool
  .goods_num {
  height: 55rpx;
  width: 55rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.footer_tool {
  display: flex;
  left: 0;
  bottom: 0;
  position: fixed;
  width: 100%;
  height: 90rpx;
  background-color: #fff;
  border-top: 1px solid #ccc;
}
.total_price_wrap {
  flex: 5;
  padding-right: 15rpx;
  text-align: right;
}
.total_price_wrap .total_price text.total_price_text {
  color: var(--themeColor);
  font-size: 34prx;
  font-weight: 600;
}
.order_pay_wrap {
  flex: 3;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--themeColor);
  font-size: 32rpx;
  font-weight: 600;
  color: white;
}
</style>

<template>
  <view class="receive_address_row">
    <view class="user_info_row">
      <view class="useriofo">
        <view>
          {{ address.userName }}
        </view>
        <view>
          {{
            address.provinceName +
              address.cityName +
              address.countyName +
              address.detailInfo
          }}
        </view>
      </view>
      <view class="userphone">
        <view>
          {{ address.telNumber }}
        </view>
      </view>
    </view>
  </view>

  <!-- 购物车内容 -->
  <view class="cart_content">
    <view class="cart_title"> 购物车</view>
    <view class="cart_main">
      <view class="cart_item" wx:for="{{cart}}" wx:key="goods_id">
        <!-- 商品图片 -->
        <navigator class="cart_img_wrap">
          <image mode="widthFix" src="{{item.goods_small_logo}}"></image>
        </navigator>
        <!-- 商品信息 -->
        <view class="cart_info_wrap">
          <view class="goods_name">
            {{ item.goods_name }}
          </view>
          <view class="goods_price_wrap">
            <view class="goods_price"> ￥{{ item.goods_price }} </view>
            <view class="cart_num_tool">
              <view class="goods_num">X{{ item.num }}</view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
  <!-- 底部工具栏 -->
  <view class="footer_tool">
    <!-- 总价格 -->
    <view class="total_price_wrap">
      <view class="total_price">
        合计：
        <text class="total_price_text">￥{{ totalPrice }}</text>
      </view>
      <view>
        包含运费
      </view>
    </view>
    <!-- 结算 -->
    <view class="order_pay_wrap" bindtap="handleOrderPay">
      支付({{ totalNumber }})
    </view>
  </view>
</template>

<script>
import wepy from '@wepy/core';

wepy.page({
  data: {
    address: {},
    cart: [],

    totalPrice: 0,
    totalNumber: 0
  },

  onLoad: function(options) {},
  onShow() {
    const address = wx.getStorageSync('address');
    let cart = wx.getStorageSync('cart') || [];
    cart = cart.filter(v => v.checked);
    // const allchecked = cart.length ? cart.every(v => v.checked) : false;

    this.address= address;
    
    let totalPrice = 0;
    let totalNumber = 0;
    cart.forEach(v => {
      totalPrice += v.num * v.goods_price;
      totalNumber += v.num;
    });
    // 判断数组是否为空
    this.cart = cart,
    this.totalNumber = totalNumber,
    this.totalPrice= totalPrice,
    this.address = address

  },
  methods:{
  handleOrderPay() {
    const token = wx.getStorageSync('token');
    if (!token) {
      wx.navigateTo({
        url: './auth'
      });
      return;
    }
    console.log('已存在token');
  }
  }
});
</script>

<config>
{
  "usingComponents": {},
  "navigationBarTitleText": "商品支付"
}
</config>