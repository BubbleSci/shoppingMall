<style lang="less">
page {
  padding-bottom: 90rpx;
}
.receive_address_row .address_btn {
  padding: 20rpx;
}
.receive_address_row .address_btn button {
  width: 60%;
}
.receive_address_row .user_info_row {
  padding: 20rpx;
  display: flex;
}
.receive_address_row .user_info_row .useriofo {
  flex: 5;
}
.receive_address_row .user_info_row .userphone {
  flex: 2;
}
.cart_content .cart_title {
  padding: 20rpx;
  font-size: 36rpx;
  color: var(--themeColor);
  border-bottom: 1px solid currentColor;
  border-top: 1px solid currentColor;
}
.cart_content .cart_main .cart_item {
  display: flex;
  padding: 10rpx;
  border-bottom: 1px solid #ccc;
}
.cart_content .cart_main .cart_item .cart_chk_wrap {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}
.cart_content .cart_main .cart_item navigator.cart_img_wrap {
  flex: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}
.cart_content .cart_main .cart_item navigator.cart_img_wrap image {
  width: 80%;
}
.cart_content .cart_main .cart_item .cart_info_wrap {
  display: flex;
  justify-content: space-around;
  flex-direction: column;
  flex: 4;
}
.cart_content .cart_main .cart_item .cart_info_wrap .goods_name {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  color: #666;
}
.cart_content .cart_main .cart_item .cart_info_wrap .goods_price_wrap {
  display: flex;
  justify-content: space-between;
}
.cart_content
  .cart_main
  .cart_item
  .cart_info_wrap
  .goods_price_wrap
  .goods_price {
  color: var(--themeColor);
  font-size: 34rpx;
}
.cart_content
  .cart_main
  .cart_item
  .cart_info_wrap
  .goods_price_wrap
  .cart_num_tool {
  display: flex;
}
.cart_content
  .cart_main
  .cart_item
  .cart_info_wrap
  .goods_price_wrap
  .cart_num_tool
  .num_edit {
  height: 55rpx;
  width: 55rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1rpx solid #ccc;
}
.cart_content
  .cart_main
  .cart_item
  .cart_info_wrap
  .goods_price_wrap
  .cart_num_tool
  .goods_num {
  height: 55rpx;
  width: 55rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.footer_tool {
  display: flex;
  left: 0;
  bottom: 0;
  position: fixed;
  width: 100%;
  height: 90rpx;
  background-color: #fff;
  border-top: 1px solid #ccc;
}
.footer_tool .all_chk_wrap {
  flex: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}
.footer_tool .total_price_wrap {
  flex: 5;
  padding-right: 15rpx;
  text-align: right;
}
.footer_tool .total_price_wrap .total_price text.total_price_text {
  color: var(--themeColor);
  font-size: 34prx;
  font-weight: 600;
}
.footer_tool .order_pay_wrap {
  flex: 3;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--themeColor);
  font-size: 32rpx;
  font-weight: 600;
  color: white;
}
</style>

<template>
  <view class="receive_address_row">
    <view class="address_btn" wx:if="{{!address.userName}}">
      <button bindtap="handelChooseAddress" type="primary" plain="{{true}}">
        获取收获地址
      </button>
    </view>
    <view wx:else class="user_info_row">
      <view class="useriofo">
        <view>
          {{ address.userName }}
        </view>
        <view>
          {{
            address.provinceName +
              address.cityName +
              address.countyName +
              address.detailInfo
          }}
        </view>
      </view>
      <view class="userphone">
        <view>
          {{ address.telNumber }}
        </view>
      </view>
    </view>
  </view>

  <!-- 购物车内容 -->
  <view class="cart_content">
    <view class="cart_title"> 购物车</view>
    <view class="cart_main">
      <block wx:if="{{cart.length!==0}}">
        <view class="cart_item" wx:for="{{cart}}" wx:key="goods_id">
          <!-- 单选框 -->
          <view class="cart_chk_wrap">
            <checkbox-group
              bindchange="handleItemChange"
              data-id="{{item.goods_id}}"
            >
              <checkbox checked="{{item.checked}}"></checkbox>
            </checkbox-group>
          </view>
          <!-- 商品图片 -->
          <navigator class="cart_img_wrap">
            <image mode="widthFix" src="{{item.goods_small_logo}}"></image>
          </navigator>
          <!-- 商品信息 -->
          <view class="cart_info_wrap">
            <view class="goods_name">
              {{ item.goods_name }}
            </view>
            <view class="goods_price_wrap">
              <view class="goods_price"> ￥{{ item.goods_price }} </view>
              <view class="cart_num_tool">
                <view
                  class="num_edit"
                  bindtap="handleItemNumEdit"
                  data-id="{{item.goods_id}}"
                  data-operation="{{-1}}"
                  >-
                </view>
                <view class="goods_num">{{ item.num }}</view>
                <view
                  class="num_edit"
                  bindtap="handleItemNumEdit"
                  data-id="{{item.goods_id}}"
                  data-operation="{{1}}"
                  >+
                </view>
              </view>
            </view>
          </view>
        </view>
      </block>
      <block wx:else>
        <image
          mode="widthFix"
          src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1590976202&di=d872d526a78b1bf3b3d42a3f21c67255&src=http://a.mayouwang.com/addons/mihua_mall/recouse/images/emptycart.png"
        ></image>
      </block>
    </view>
  </view>
  <!-- 底部工具栏 -->
  <view class="footer_tool">
    <!-- 全选框 -->
    <view class="all_chk_wrap">
      <checkbox-group bindchange="handleItemAllCheck">
        <checkbox checked="{{allchecked}}">全选</checkbox>
      </checkbox-group>
    </view>
    <!-- 总价格 -->
    <view class="total_price_wrap">
      <view class="total_price">
        合计：
        <text class="total_price_text">￥{{ totalPrice }}</text>
      </view>
      <view>
        包含运费
      </view>
    </view>
    <!-- 结算 -->
    <view class="order_pay_wrap" bindtap="handlePay">
      结算({{ totalNumber }})
    </view>
  </view>
</template>

<script>
import wepy from '@wepy/core';
import {
  getSetting,
  openSetting,
  chooseAddress,
  showModal,
  showToast
} from '../utils/asyncWx.js';

wepy.page({
  data: {
    address: {},
    cart: [],
    allchecked: false,
    totalPrice: 0,
    totalNumber: 0
  },

  onLoad: function(options) {},

  onShow() {
        const address = wx.getStorageSync("address");
        const cart = wx.getStorageSync("cart") || [];
        // const allchecked = cart.length ? cart.every(v => v.checked) : false;
        this.setCart(cart);
        this.address = address;
       // this.cart = cart;
    },
  methods: {
    // 点击触发s收货地址
    async handelChooseAddress() {
        //1获取权限状态
        try {
            const res1 = await getSetting();
            const scopeAddress = res1.authSetting["scope.address"];

            //2判断权限 状态
            if (scopeAddress === true || scopeAddress === undefined) {
                const address = await chooseAddress();
                console.log(address);
                wx.setStorageSync("address", address);
            } else {
                3 //诱导用户打开授权页面
                await openSetting();
                //4调用收获地址api
                const address = await chooseAddress();
                //存入缓存
                wx.setStorageSync("address", address);
                console.log(address);
            }
        } catch (error) {
            console.log(error);
        }
    },
    // 商品的选中
    handleItemChange(e) {
        const goods_id = e.currentTarget.dataset.id;
        console.log(goods_id)
        let cart = this.cart;
        let index = cart.findIndex(v => v.goods_id === goods_id);
        cart[index].checked = !cart[index].checked;
        //this.cart = cart;
        //wx.setStorageSync("cary",cart);
       this.setCart(cart);
    },
    // 设置购物车状态同时 重新计算 底部工具栏数据 全选 总价格 购买数量
    setCart(cart) {
        let allchecked = true;
        let totalPrice = 0;
        let totalNumber = 0;
        cart.forEach(v => {
                if (v.checked) {
                    totalPrice += v.num * v.goods_price;
                    totalNumber += v.num;
                } else {
                    allchecked = false;
                }


            })
            // 判断数组是否为空
        allchecked = cart.length != 0 ? allchecked : false;
        this.cart = cart,
        this.allchecked = allchecked,
        this.totalNumber = totalNumber,
        this.totalPrice = totalPrice

        wx.setStorageSync("cart", cart);

    },

    // 商品全选功能
    handleItemAllCheck() {
        // 获取data的数据
        let cart = this.cart;
        let allchecked  = this.allchecked;
        // 修改值取反
        allchecked = !allchecked;
        // 循环修改所有check
        cart.forEach(v => v.checked = allchecked);
        // 把修改的值存入data和缓存中
        this.setCart(cart);

    },

    // 修改商品数量
    async handleItemNumEdit(e) {
        // 获取传递过来的参数
        const { operation, id } = e.currentTarget.dataset;
        // 获取购物车数组
        let cart = this.cart;
        // 找到需要修改商品的下标
        let index = cart.findIndex(v => v.goods_id === id);
        if (cart[index].num === 1 && operation === -1) {
            const res = await showModal({ content: "您是否要删除？" });
            if (res.confirm) {
                cart.splice(index, 1);
                this.setCart(cart);
            }
        } else {
            // 修改
            cart[index].num += operation;
            // 设置回data和缓存中
            this.setCart(cart);

        }


    },
    // 结算按钮
    async handlePay() {
        const address = this.address;
        const totalNumber  = this.totalNumber;
        if (!address.userName) {
            await showToast({ content: "您还没有填写收货地址！" });
            return;
        }
        if (totalNumber === 0) {
            await showToast({ content: "您还没有选购商品！" });
            return;
        }
        wx.navigateTo({
            url: './pay',

        });

    }
  }
});
</script>
<config>
{
  "usingComponents": {},
  "navigationBarTitleText": "购物车"
}
</config>
