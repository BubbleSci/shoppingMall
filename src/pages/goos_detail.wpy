<style lang="less">
page {
  padding-bottom: 90rpx;
}
.detail_swiper swiper {
  height: 65vw;
  text-align: center;
}
.detail_swiper swiper image {
  width: 60%;
}
.detail_swiper .goods_price {
  color: var(--themeColor);
  padding: 15rpx;
  font-size: 32rpx;
  font-weight: 800;
}
.detail_swiper .goods_name_row {
  border-top: 5rpx solid #dedede;
  border-bottom: 5rpx solid #dedede;
  padding: 10rpx 0;
  display: flex;
}
.detail_swiper .goods_name_row .goods_name {
  flex: 5;
  color: black;
  font-size: 30rpx;
  padding: 0 10rpx;
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.detail_swiper .goods_name_row .goods_collect {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-left: 2rpx solid #000;
}
.detail_swiper .goods_name_row .goods_collect .icon-favorite-fill {
  color: orangered;
}
.goods_info .goods_info_title {
  font-size: 32rpx;
  font-weight: 600;
  color: var(--themeColor);
  padding: 20rpx;
}
.btn_tool {
  border-top: 1px solid #ccc;
  position: fixed;
  width: 100%;
  left: 0;
  bottom: 0;
  height: 90rpx;
  display: flex;
  background-color: white;
}
.btn_tool .tool_item {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: 24rpx;
  position: relative;
}
.btn_tool .tool_item button {
  position: absolute;
  height: 100%;
  width: 100%;
  opacity: 0;
  top: 0;
  left: 0;
}
.btn_tool .btn_cart {
  flex: 2;
  background-color: #ffa500;
  font-size: 30rpx;
  font-weight: 600;
  color: white;
}
.btn_tool .btn_buy {
  flex: 2;
  background-color: #eb4450;
  font-size: 30rpx;
  font-weight: 600;
  color: white;
}
</style>

<template>
  <view class="detail_swiper">
    <swiper autoplay="{{true}}" circular="{{true}}" indicator-dots="{{true}}">
      <swiper-item
        wx:for="{{goodsDetail.pics}}"
        wx:key="item.pics_id"
        bindtap="handlePreviewImage"
        data-index="{{index}}"
      >
        <image mode="widthFix" src="{{item.pics_mid}}"></image>
      </swiper-item>
    </swiper>
    <view class="goods_price"> ￥{{ goodsDetail.goods_price }} </view>
    <view class="goods_name_row">
      <view class="goods_name">
        {{ goodsDetail.goods_name }}
      </view>
      <view class="goods_collect" bindtap="handleCollect">
        <text
          class="iconfont {{isCollect?'icon-shoucang':'icon-shoucang2'}} "
        ></text>
        <text class="collect_text">收藏</text>
      </view>
    </view>
  </view>

  <view class="goods_info">
    <view class="goods_info_title">
      图文详情
    </view>
    <view class="goods_info_content">
      <rich-text nodes="{{goodsDetail.goods_introduce}}"> </rich-text>
    </view>
  </view>

  <view class="btn_tool">
    <view class="tool_item">
      <view class="iconfont icon-kefu"> </view>
      <view>
        联系客服
      </view>
      <button open-type="contact"></button>
    </view>
    <view class="tool_item">
      <view class="iconfont icon-yixianshi-"> </view>
      <view>
        分享
      </view>
      <button open-type="share"></button>
    </view>
    <navigator url="./cart" open-type="switchTab" class="tool_item">
      <view class="iconfont icon-gou_wu_che2"> </view>
      <view>
        购物车
      </view>
    </navigator>
    <view class="tool_item btn_cart" bindtap="handleCartAdd">
      加入购物车
    </view>
    <view class="tool_item btn_buy">
      立即购买
    </view>
  </view>
</template>

<script>
import wepy from '@wepy/core';
import { request } from '../request/index.js';

wepy.page({
  /**
   * 页面的初始数据
   */
  data: {
    goodsDetail: {},
    isCollect: false
  },

  GoodsInFo: {},


  onShow: function() {
    let pages = getCurrentPages();
    let currentPage = pages[pages.length - 1];
    let options = currentPage.options;
    const { goods_id: goods_id } = options;
    console.log(goods_id);
    this.getGoodsDetail(goods_id);
  },
  methods:{
  async getGoodsDetail(goods_id) {
    const goodsDetail = await request({
      url: '/goods/detail',data: { goods_id }
    });
    //console.log(goodsDetail)
     this.goodsDetail= goodsDetail;
    this.GoodsInFo = goodsDetail;
    let collect = wx.getStorageSync('collect') || [];
    let isCollect = collect.some(v => v.goods_id === this.GoodsInFo.goods_id);

    this.goodsDetail= {
        goods_price: goodsDetail.goods_price,
        goods_name: goodsDetail.goods_name,
        pics: goodsDetail.pics,
        goods_introduce: goodsDetail.goods_introduce.replace(/\.webp/g, '.jpg')//iphone不识别webp格式
      }
      this.isCollect= isCollect;

  },
  // 点击轮播图放大
  handlePreviewImage(e) {
    const urls = this.GoodsInFo.pics.map(v => v.pics_mid);
    const index = e.currentTarget.dataset.index;
    wx.previewImage({
      current: urls[index],
      urls
    });
  },
  //加入购物车
  handleCartAdd() {
    let cart = wx.getStorageSync('cart') || [];
    //判断商品对象是否存在于购物车数组中
    let index = cart.findIndex(v => v.goods_id === this.GoodsInFo.goods_id);
    //不存在
    if (index === -1) {
      this.GoodsInFo.num = 1;
      this.GoodsInFo.checked = true;
      cart.push(this.GoodsInFo);
    } else {
      cart[index].num++;
    }
    wx.setStorageSync('cart', cart);

    wx.showToast({
      title: '加入成功',
      icon: 'success',
      //防止疯狂点击
      mask: true
    });
  },
  handleCollect() {
    let isCollect = false;
    let collect = wx.getStorageSync('collect') || [];
    let index = collect.findIndex(v => v.goods_id === this.GoodsInFo.goods_id);
    if (index !== -1) {
      collect.splice(index, 1);
      isCollect = false;
      wx.showToast({
        title: '取消成功',
        icon: 'success',
        mask: true
      });
    } else {
      collect.push(this.GoodsInFo);
      isCollect = true;
      wx.showToast({
        title: '收藏成功',
        icon: 'success',
        mask: true
      });
    }
    wx.setStorageSync('collect', collect);
    this.isCollect = isCollect;
  }
  }
});
</script>

<config>
{
  "usingComponents": {},
  "navigationBarTitleText": "详情"
}
</config>